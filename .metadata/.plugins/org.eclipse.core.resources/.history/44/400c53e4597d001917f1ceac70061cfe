package com.bridge.api.service;

import java.time.LocalDate;
import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.bridge.api.dto.UserDto;
import com.bridge.api.model.Email;
import com.bridge.api.model.User;
import com.bridge.api.mongo.reposetory.UserRepository;

@org.springframework.stereotype.Service
public class ServiceImpl implements Service {

	@Autowired
	private UserRepository userRepository;
	@Autowired
	private ModelMapper mapper;

	@Autowired
	MailService mailService;
	@Autowired
	PasswordEncoder passwordEncoder;

	@Override
	public void saveService(UserDto userDto) {

		Email email = new Email();
		User user = mapper.map(userDto, User.class);
		user.setCurrentDate(LocalDate.now());
		user.setPassWord(passwordEncoder.encode(user.getPassWord()));
		User getuser = userRepository.save(user);

		email.setFrom("bohari2@gmail.com");
		email.setTo(userDto.getUserName());
		email.setSubject("Email Verification ");
		try {
			mailService.send(email, getuser.getUserId());
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void setVerify(int id) {
		Optional<User> user = userRepository.findById(id);
		User user1 = user.get();
		user1.setVerified(true);
		userRepository.save(user1);
	}

	@Override
	public String loginService(String userName, String passWord) {
		Optional<User> user = userRepository.findByEmail(userName);
		System.out.println("shubhas");
		System.out.println(user.get().getUserName());
		if(user != null)
			return user.get().toString();
		return "Shubham";
	}

}
