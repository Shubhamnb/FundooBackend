package com.bridge.api.service;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.bridge.api.dto.NoteDto;
import com.bridge.api.model.Note;
import com.bridge.api.model.User;
import com.bridge.api.mongo.reposetory.NoteRepository;
import com.bridge.api.mongo.reposetory.UserRepository;
import com.bridge.api.util.UserToken;

public class NoteServiceImpl implements NoteService{
	
	
	@Autowired
	private UserRepository userRepository;
	
	
	@Autowired
	private ModelMapper mapper;
	
	
	
	@Autowired
	MailService mailService;
	
	
	@Autowired
	PasswordEncoder passwordEncoder;

	@Autowired
	UserToken userToken;
	
	@Autowired
	NoteRepository noteRepository;

	/*Method for Save a note in Mongod */
	@Override
	public void saveNote(NoteDto noteDto, String token) {
		String userId = userToken.tokenVerify(token);
		Note note = mapper.map(noteDto, Note.class);
		note.setCurrentTime(LocalDateTime.now());
		note.setUpdatedTime(LocalDateTime.now());
		note.setUserId(userId);
		noteRepository.save(note);
		System.out.println(userId);
		Optional<User> user = userRepository.findById(userId);
		if (user.isPresent()) {
			List<Note> noteList = user.get().getNotes();
			if(noteList != null) {
				noteList.add(note);
				user.get().setNotes(noteList);
				userRepository.save(user.get());
			}else {
				List<Note> list = new ArrayList<Note>();
				list.add(note);
				user.get().setNotes(list);
				userRepository.save(user.get());
			}
		}
		
	}

	@Override
	public String updateNote(NoteDto noteDto) {
		
		return null;
	}

}
